<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * wallee Magento 1
 *
 * This Magento extension enables to process payments with wallee (https://www.wallee.com/).
 *
 * @package Wallee_Payment
 * @author wallee AG (http://www.wallee.com/)
 * @license http://www.apache.org/licenses/LICENSE-2.0  Apache Software License (ASL 2.0)
 */
-->
<config>
	<modules>
		<Wallee_Payment>
			<version>1.1.13</version>
		</Wallee_Payment>
	</modules>
	<global>
		<models>
			<wallee_payment>
				<class>Wallee_Payment_Model</class>
				<resourceModel>wallee_payment_resource</resourceModel>
			</wallee_payment>
			<wallee_payment_resource>
				<class>Wallee_Payment_Model_Resource</class>
				<deprecatedNode>wallee_payment_mysql4</deprecatedNode>
				<entities>
					<transaction_info>
						<table>wallee_payment_transaction_info</table>
					</transaction_info>
					<token_info>
						<table>wallee_payment_token_info</table>
					</token_info>
					<payment_method_configuration>
						<table>wallee_payment_method_configuration</table>
					</payment_method_configuration>
					<refund_job>
						<table>wallee_payment_refund_job</table>
					</refund_job>
				</entities>
			</wallee_payment_resource>
		</models>
		<resources>
			<wallee_payment_setup>
				<setup>
					<module>Wallee_Payment</module>
				</setup>
			</wallee_payment_setup>
			<wallee_payment_read>
				<connection>
					<use>core_read</use>
				</connection>
			</wallee_payment_read>
			<wallee_payment_write>
				<connection>
					<use>core_write</use>
				</connection>
			</wallee_payment_write>
		</resources>
		<blocks>
			<wallee_payment>
				<class>Wallee_Payment_Block</class>
			</wallee_payment>
		</blocks>
		<helpers>
			<wallee_payment>
				<class>Wallee_Payment_Helper</class>
			</wallee_payment>
		</helpers>
		<events>
			<resource_get_tablename>
				<observers>
					<wallee_payment_get_tablename>
						<type>singleton</type>
						<class>wallee_payment/observer_core</class>
						<method>addAutoloader</method>
					</wallee_payment_get_tablename>
				</observers>
			</resource_get_tablename>
			<controller_front_init_before>
				<observers>
					<wallee_payment_front_init_before>
						<type>singleton</type>
						<class>wallee_payment/observer_core</class>
						<method>frontInitBefore</method>
					</wallee_payment_front_init_before>
				</observers>
			</controller_front_init_before>
			<adminhtml_init_system_config>
				<observers>
					<wallee_payment_init_system_config>
						<type>singleton</type>
						<class>wallee_payment/observer_core</class>
						<method>initSystemConfig</method>
					</wallee_payment_init_system_config>
				</observers>
			</adminhtml_init_system_config>
			<admin_system_config_changed_section_wallee_payment>
				<observers>
					<wallee_payment_config_changed>
						<type>singleton</type>
						<class>wallee_payment/observer_core</class>
						<method>configChanged</method>
					</wallee_payment_config_changed>
				</observers>
			</admin_system_config_changed_section_wallee_payment>
			<sales_order_invoice_cancel>
				<observers>
					<wallee_payment_cancel_invoice>
						<type>singleton</type>
						<class>wallee_payment/observer_payment</class>
						<method>cancelInvoice</method>
					</wallee_payment_cancel_invoice>
				</observers>
			</sales_order_invoice_cancel>
			<sales_order_invoice_register>
				<observers>
					<wallee_payment_invoice_register>
						<type>singleton</type>
						<class>wallee_payment/observer_payment</class>
						<method>registerInvoice</method>
					</wallee_payment_invoice_register>
				</observers>
			</sales_order_invoice_register>
			<sales_order_payment_capture>
				<observers>
					<wallee_payment_payment_capture>
						<type>singleton</type>
						<class>wallee_payment/observer_payment</class>
						<method>capturePayment</method>
					</wallee_payment_payment_capture>
				</observers>
			</sales_order_payment_capture>
			<sales_order_payment_cancel>
				<observers>
					<wallee_payment_payment_capture>
						<type>singleton</type>
						<class>wallee_payment/observer_payment</class>
						<method>cancelPayment</method>
					</wallee_payment_payment_capture>
				</observers>
			</sales_order_payment_cancel>
			<sales_quote_payment_import_data_before>
				<observers>
					<wallee_payment_payment_import_data_before>
						<type>singleton</type>
						<class>wallee_payment/observer_payment</class>
						<method>paymentImportDataBefore</method>
					</wallee_payment_payment_import_data_before>
				</observers>
			</sales_quote_payment_import_data_before>
			<sales_model_service_quote_submit_before>
				<observers>
					<wallee_payment_quote_submit_before>
						<type>singleton</type>
						<class>wallee_payment/observer_payment</class>
						<method>quoteSubmitBefore</method>
					</wallee_payment_quote_submit_before>
				</observers>
			</sales_model_service_quote_submit_before>
			<sales_model_service_quote_submit_success>
				<observers>
					<wallee_payment_quote_submit_success>
						<type>singleton</type>
						<class>wallee_payment/observer_payment</class>
						<method>quoteSubmitSuccess</method>
					</wallee_payment_quote_submit_success>
				</observers>
			</sales_model_service_quote_submit_success>
			<sales_convert_order_to_quote>
				<observers>
					<wallee_payment_convert_order_to_quote>
						<type>singleton</type>
						<class>wallee_payment/observer_payment</class>
						<method>convertOrderToQuote</method>
					</wallee_payment_convert_order_to_quote>
				</observers>
			</sales_convert_order_to_quote>

			<!-- Config synchronize events -->
			<wallee_payment_config_synchronize>
				<observers>
					<wallee_payment_synchronize_payment_method_configurations>
						<type>singleton</type>
						<class>wallee_payment/service_paymentMethodConfiguration</class>
						<method>synchronize</method>
					</wallee_payment_synchronize_payment_method_configurations>
					<wallee_payment_install_webhooks>
						<type>singleton</type>
						<class>wallee_payment/service_webhook</class>
						<method>install</method>
					</wallee_payment_install_webhooks>
					<wallee_payment_update_manual_tasks>
						<type>singleton</type>
						<class>wallee_payment/service_manualTask</class>
						<method>update</method>
					</wallee_payment_update_manual_tasks>
				</observers>
			</wallee_payment_config_synchronize>

			<!-- Webhook events -->
			<wallee_payment_webhook_deliveryindication>
				<observers>
					<wallee_payment_webhook_deliveryindication>
						<type>singleton</type>
						<class>wallee_payment/webhook_deliveryIndication</class>
						<method>listen</method>
					</wallee_payment_webhook_deliveryindication>
				</observers>
			</wallee_payment_webhook_deliveryindication>
			<wallee_payment_webhook_manualtask>
				<observers>
					<wallee_payment_webhook_manualtask>
						<type>singleton</type>
						<class>wallee_payment/webhook_manualTask</class>
						<method>listen</method>
					</wallee_payment_webhook_manualtask>
				</observers>
			</wallee_payment_webhook_manualtask>
			<wallee_payment_webhook_paymentmethodconfiguration>
				<observers>
					<wallee_payment_webhook_paymentmethodconfiguration>
						<type>singleton</type>
						<class>wallee_payment/webhook_paymentMethodConfiguration</class>
						<method>listen</method>
					</wallee_payment_webhook_paymentmethodconfiguration>
				</observers>
			</wallee_payment_webhook_paymentmethodconfiguration>
			<wallee_payment_webhook_refund>
				<observers>
					<wallee_payment_webhook_refund>
						<type>singleton</type>
						<class>wallee_payment/webhook_refund</class>
						<method>listen</method>
					</wallee_payment_webhook_refund>
				</observers>
			</wallee_payment_webhook_refund>
			<wallee_payment_webhook_transaction>
				<observers>
					<wallee_payment_webhook_transaction>
						<type>singleton</type>
						<class>wallee_payment/webhook_transaction</class>
						<method>listen</method>
					</wallee_payment_webhook_transaction>
				</observers>
			</wallee_payment_webhook_transaction>
			<wallee_payment_webhook_transactioncompletion>
				<observers>
					<wallee_payment_webhook_transactioncompletion>
						<type>singleton</type>
						<class>wallee_payment/webhook_transactionCompletion</class>
						<method>listen</method>
					</wallee_payment_webhook_transactioncompletion>
				</observers>
			</wallee_payment_webhook_transactioncompletion>
			<wallee_payment_webhook_transactioninvoice>
				<observers>
					<wallee_payment_webhook_transactioninvoice>
						<type>singleton</type>
						<class>wallee_payment/webhook_transactionInvoice</class>
						<method>listen</method>
					</wallee_payment_webhook_transactioninvoice>
				</observers>
			</wallee_payment_webhook_transactioninvoice>
			<wallee_payment_webhook_token>
				<observers>
					<wallee_payment_webhook_token>
						<type>singleton</type>
						<class>wallee_payment/webhook_token</class>
						<method>listen</method>
					</wallee_payment_webhook_token>
				</observers>
			</wallee_payment_webhook_token>
			<wallee_payment_webhook_tokenversion>
				<observers>
					<wallee_payment_webhook_tokenversion>
						<type>singleton</type>
						<class>wallee_payment/webhook_tokenVersion</class>
						<method>listen</method>
					</wallee_payment_webhook_tokenversion>
				</observers>
			</wallee_payment_webhook_tokenversion>
		</events>
	</global>
	<admin>
		<routers>
			<adminhtml>
				<args>
					<modules>
						<Wallee_Payment after="Mage_Adminhtml">Wallee_Payment</Wallee_Payment>
					</modules>
				</args>
			</adminhtml>
		</routers>
	</admin>
	<adminhtml>
		<translate>
			<modules>
				<Wallee_Payment>
					<files>
						<default>Wallee_Payment.csv</default>
					</files>
				</Wallee_Payment>
			</modules>
		</translate>
		<layout>
			<updates>
				<wallee_payment>
					<file>wallee_payment.xml</file>
				</wallee_payment>
			</updates>
		</layout>
	</adminhtml>
	<frontend>
		<secure_url>
			<wallee_payment>/wallee</wallee_payment>
		</secure_url>
		<routers>
			<Wallee_Payment>
				<use>standard</use>
				<args>
					<module>Wallee_Payment</module>
					<frontName>wallee</frontName>
				</args>
			</Wallee_Payment>
		</routers>
		<translate>
			<modules>
				<Wallee_Payment>
					<files>
						<default>Wallee_Payment.csv</default>
					</files>
				</Wallee_Payment>
			</modules>
		</translate>
		<layout>
			<updates>
				<wallee_payment>
					<file>wallee_payment.xml</file>
				</wallee_payment>
			</updates>
		</layout>
	</frontend>
	<crontab>
		<jobs>
			<wallee_cron_refund_jobs>
				<schedule>
					<cron_expr>*/10 * * * *</cron_expr>
				</schedule>
				<run>
					<model>wallee_payment/observer_cron::processRefundJobs</model>
				</run>
			</wallee_cron_refund_jobs>
		</jobs>
	</crontab>
	<default>
		<wallee_payment>
			<information>
				<version>1.1.12</version>
				<sdk_version>2.1.5</sdk_version>
			</information>
			<general>
				<base_gateway_url>https://app-wallee.com/</base_gateway_url>
				<manual_tasks>0</manual_tasks>
			</general>
			<email>
				<order>1</order>
			</email>
			<document>
				<customer_download_invoice>1</customer_download_invoice>
				<customer_download_packing_slip>1</customer_download_packing_slip>
			</document>
			<line_item>
				<overwrite_shipping_description>0</overwrite_shipping_description>
				<custom_shipping_description>Shipping</custom_shipping_description>
				<enforce_consistency>1</enforce_consistency>
			</line_item>
		</wallee_payment>
	</default>
</config>
